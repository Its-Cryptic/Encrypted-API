
buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven {
            url = 'https://repo.spongepowered.org/repository/maven-public/'
            content { includeGroup "org.spongepowered" }
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: "${forgegradleVersion}", changing: false
        classpath "org.spongepowered:mixingradle:${mixingradleVersion}"
        classpath "org.parchmentmc:librarian:${librarianVersion}"
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

//plugins { // Shade (GeckoLib)
//    id 'com.github.johnrengelman.shadow' version '7.1.2'
//}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = "${minecraftVersion}-${modVersion}"
group = "dev.cryptic.${modId}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${modId}"

configurations {
    library
    shade // <- Create a 'shade' configuration
    implementation.extendsFrom(shade) // <- Add the shade configuration to implementation
}

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: "${minecraftVersion}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', "${modId}"

            mods {
                "${modId}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', "${modId}"

            mods {
                "${modId}" {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'encryptedapi'

            mods {
                encryptedapi {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                encryptedapi {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven {
        name 'JEI maven'
        url = "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        name 'Curios maven'
        url = "https://maven.theillusivec4.top/"
        content {
            includeGroupByRegex "top\\.theillusivec4.*"
        }
    }
    maven {
        name = 'Lodestone Maven'
        url = 'https://maven.blamejared.com/'
    }
}


dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.2.20'

    if (System.getProperty("idea.sync.active") != "true") {
        annotationProcessor "org.spongepowered:mixin:${mixinVersion}:processor"
    }


    // JEI Dependency
    compileOnly fg.deobf("mezz.jei:jei-${minecraftVersion}-common-api:${jeiVersion}")
    compileOnly fg.deobf("mezz.jei:jei-${minecraftVersion}-forge-api:${jeiVersion}")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraftVersion}-forge:${jeiVersion}")

    // Lodestone Dependency
    implementation fg.deobf("team.lodestar.lodestone:lodestone:${minecraftVersion}-${lodestoneVersion}")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    //clientAnnotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    //apiAnnotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    mixin {
        add sourceSets.main, 'mixins.encryptedapi.refmap.json'
        config 'mixins.encryptedapi.json'
        debug.verbose = true
        debug.export = true
    }

}

jar {
    manifest {
        attributes([
                "Specification-Title"     : modId,
                "Specification-Vendor"    : mod_author,
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

task processAspectMixins(type: Copy) {
    from 'src/main/resources'
    include 'mixins.encryptedapi.json'
    into 'build/resources/main'
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
